{
	// Place your snippets for inform7extension here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Say": {
		"prefix": "say",
		"body": [
			"say \"     $0\";"
		],
		"description": "Say function"
	},
	"Insay if statement": {
		"prefix": "sayif",
		"body": [
			"[if $1]$3${2:[else]$4}[end if]$0"
		],
		"description": "Inline if statement for say"
	},
	"BadSpots": {
		"prefix": "badspot",
		"body": [
			"add ${1:Situation} to BadSpots of ${2|BodyhorrorList,FurryList,DemonList,FeralList,HumorousList,HumanoidList,FemaleList,HermList,MaleList,TransList,CockvoreList,CuckList,IncestList,MindcontrolList,NonconList,VoreList|};$0"
		],
		"description": "Add Situation to BadSpots of one of the various lists"
	},
	"Resolution of Event": {
		"prefix": "resolution",
		"body": [
			"now Resolution of ${1:Event} is ${2:1};"
		],
		"description": "now Resolution of event is x;"
	},
	"New Situation": {
		"prefix": "situation",
		"body": [
			"Table of GameEventIDs (continued)",
			"Object\tName",
			"${1:Event Name}\t\"${1:Event Name}\"",
			"",
			"${2:when play begins:}",
			"\t$0",
			"",
			"${1:Event Name} is a situation.",
			"ResolveFunction of ${1:Event Name} is \"[ResolveEvent ${1:Event Name}]\".",
			"Sarea of ${1:Event Name} is \"${3:Nowhere}\".",
			"",
			"to say ResolveEvent ${1:Event Name}:",
			"\t"
		],
		"description": "Create a new Situation"
	},
	"Walkin Table": {
		"prefix": "walkintable",
		"body": [
			"Table of ${1|NavIn,WalkIn|}Events (continued)",
			"Priority\tName\tEventObject\tEventConditions\tEventRoom\tLastEncounterTurn\tCoolDownTurns\tEncounterPercentage",
			"${2:3}\t\"${3:EventName}\"\t${3:EventName}\t\"[EventConditions_${3:EventName}]\"\t${4:Grey Abbey Library}\t2500\t${5:2}\t${6:100}",
			"",
			"to say EventConditions_${3:EventName}:",
			"\tif $0:",
			"\t\tnow CurrentWalkinEvent_ConditionsMet is true;"
		],
		"description": "Add to walkin/navin table"
	},
	"Open End Choice": {
		"prefix": "openchoice",
		"body": [
			"let ${1:Event_Context}_Choices be a list of text;",
			"add \"${2:Choice 1}\" to ${1:Event_Context}_Choices;",
			"let ${1:Event_Context}_Choice be what the player chooses from ${1:Event_Context}_Choices;",
			"if ${1:Event_Context}_Choice is:",
			"\t-- \"${2:Choice 1}\":",
			"\t\tLineBreak;",
			"\t\t$0"
		],
		"description": "Create a new list of choices"
	},
	"Yes/No Choice": {
		"prefix": "closechoice",
		"body": [
			"LineBreak;",
			"say \"     ${1:[bold type]Make a choice.[roman type][line break]}\"",
			"LineBreak;",
			"say \"     ([link]Y[as]y[end link]) - Yes\";",
			"say \"     ([link]N[as]n[end link]) - No\";",
			"if Player consents:",
			"\tLineBreak;",
			"\t$0",
			"else:",
			"\tLineBreak;"
		],
		"description": "Create a new boolean choice question"
	},
	"Loot Table": {
		"prefix": "trophylist",
		"body": [
			"to say GenerateTrophyList_${1:${TM_FILENAME_BASE/[\\ ]//}}:",
			"\t[ Reminder: LootBonus can be +35 at maximum - 10 for Magpie Eyes, 15 for Mugger and 10 from Player Perception ]",
			"\tif a random chance of (80 + LootBonus) in 100 succeeds: [common drop]",
			"\t\tadd \"$2\" to CombatTrophyList;",
			"\tif a random chance of (50 + LootBonus) in 100 succeeds: [common drop]",
			"\t\tadd \"dirty water\" to CombatTrophyList;",
			"\tif a random chance of (30 + LootBonus) in 100 succeeds: [uncommon drop]",
			"\t\tadd \"food\" to CombatTrophyList;",
			"\tif a random chance of (20 + LootBonus) in 100 succeeds: [uncommon drop]",
			"\t\tadd \"soda\" to CombatTrophyList;",
			"\tif a random chance of (20 + LootBonus) in 100 succeeds: [uncommon drop]",
			"\t\tadd \"tennis ball\" to CombatTrophyList;",
			"\tif a random chance of (10 + LootBonus) in 100 succeeds: [rare drop]",
			"\t\tadd \"clean bandages\" to CombatTrophyList;",
			"\tif Debug is at level 10:",
			"\t\tsay \"DEBUG: Trophy List: [CombatTrophyList].\";"
		],
		"description": "Create a new loot table"
	},
	"Add Ending": {
		"prefix": "addend",
		"body": [
			"wait for any key;",
			"now battleground is \"Void\";",
			"the Player was ended by \"$1\";",
			"trigger ending \"${2:Player was consumed}\";",
			"end the story saying \"${3:Player was consumed}\";",
			"$0"
		],
		"description": "Add a forced ending"
	},
	"New NPC": {
		"prefix": "newnpc",
		"body": [
			"${1:${TM_FILENAME_BASE/[\\ ]//}} by ${2:You} begins here.",
			"",
			"Section 1 - NPC declaration",
			"",
			"Table of GameCharacterIDs (continued)",
			"object\tname",
			"${3:${TM_FILENAME_BASE/[\\ ]//}} \"${3:${TM_FILENAME_BASE/[\\ ]//}}\"",
			"",
			"${3:${TM_FILENAME_BASE/[\\ ]//}} is a ${4:man}.",
			"ScaleValue of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${5:3}.",
			"Body Weight of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${6:5}. [scale of 1-9 for body weight, grouped into low weight (1-3), mid weight (4-6) and high weight (7-9)]",
			"Body Definition of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${7:5}. [scale of 1-9 for body definition, grouped into low muscle (1-3), mid muscle (4-6), high muscle (7-9)]",
			"[Body Adjective is generated out of the body weight and body definition and can be used in scenes - one word descriptive adjective depending on weight and definition groups: low weight group: skinny/slender/lithe; mid weight group: average/fit/muscled; high weight group: pudgy/husky/jacked]",
			"Androginity of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${8:5}. [Gender Adjective is generated out of androginity 1-9: hypermasculine/masculine/somewhat effeminate/effeminate/androgynous/feminine butch/tomboyish/feminine/hyperfeminine]",
			"Mouth Length of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${9:5}. [inches deep for face fucking; maximum possible will be double this number (when deep throating)]",
			"Mouth Circumference of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${10:3}. [mouth circumference 1-5, \"tiny, small, normal, wide, gaping\"]",
			"Tongue Length of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${11:3}. [length in inches]",
			"Breast Size of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${12:0}. [cip size as number, counting Flat Pecs = 0, A = 1, B = 2, ...]",
			"Nipple Count of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${13:2}. [count of nipples]",
			"Asshole Depth of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${14:5}. [inches deep for anal fucking]",
			"Asshole Tightness of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${15:1}. [asshole tightness 1-5, \"extremely tight, tight, receptive, open, gaping\"]",
			"Cock Count of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${16:1}. [number of cocks]",
			"Cock Girth of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${17:3}. [thickness 1-5, thin/slender/average/thick/monstrous]",
			"Cock Length of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${18:5}. [length in inches]",
			"Ball Count of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${19:2}. [allowed numbers: 1 (uniball), 2 or 4]",
			"Ball Size of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${20:3}. [size of balls 1-7: \"acorn-sized\", \"dove egg-sized\", \"chicken egg-sized\" \"goose-egg sized\", \"ostrich-egg sized\", \"basketball-sized\", \"beachball-sized\"]",
			"Cunt Count of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${21:0}. [number of cunts]",
			"Cunt Depth of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${22:0}. [penetrable length in inches; some minor stretching allowed, or more with Twisted Capacity]",
			"Cunt Tightness of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${23:0}. [size 1-5, generates adjectives of extremely tight/tight/receptive/open/gaping]",
			"Clit Size of ${3:${TM_FILENAME_BASE/[\\ ]//}} is ${24:0}. [size 1-5, very small/small/average/large/very large]",
			"[Basic Interaction states as of game start]",
			"PlayerMet of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"PlayerRomanced of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"PlayerFriended of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"PlayerControlled of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"PlayerFucked of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"OralVirgin of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"Virgin of ${3:${TM_FILENAME_BASE/[\\ ]//}} is true.",
			"AnalVirgin of ${3:${TM_FILENAME_BASE/[\\ ]//}} is true.",
			"PenileVirgin of ${3:${TM_FILENAME_BASE/[\\ ]//}} is true.",
			"SexuallyExperienced of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false.",
			"TwistedCapacity of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false. [Twisted Characters can take any penetration, no matter the size]",
			"Sterile of ${3:${TM_FILENAME_BASE/[\\ ]//}} is false. [steriles can't knock people up]",
			"MainInfection of ${3:${TM_FILENAME_BASE/[\\ ]//}} is \"$25\".",
			"${3:${TM_FILENAME_BASE/[\\ ]//}} is in ${26:Nowhere}.",
			"Description of ${3:${TM_FILENAME_BASE/[\\ ]//}} is \"[${3:${TM_FILENAME_BASE/[\\ ]//}}Desc]\".",
			"Conversation of ${3:${TM_FILENAME_BASE/[\\ ]//}} is { \"<This is nothing but a placeholder!>\" }.",
			"The scent of ${3:${TM_FILENAME_BASE/[\\ ]//}} is \"[${3:${TM_FILENAME_BASE/[\\ ]//}}Scent]\".",
			"",
			"to say ${3:${TM_FILENAME_BASE/[\\ ]//}}Scent:",
			"\tsay \"     $27\";",
			"",
			"to say ${3:${TM_FILENAME_BASE/[\\ ]//}}Desc:",
			"\tsay \"     $28\";",
			"",
			"$0"
		],
		"description": "Create a new NPC"
	}
}